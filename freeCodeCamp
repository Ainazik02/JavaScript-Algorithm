-An easy way to append data to the end of an array is via the push() function.
-Another way to change the data in an array is with the .pop() function:
var threeArr = [1, 4, 6];
var oneDown = threeArr.pop();
console.log(oneDown);
console.log(threeArr);
The first console.log will display the value 6, and the second will display the value [1, 4].
-.shift() is same with pop()-just removes first element.
-Functions()-In JavaScript, we can divide up our code into reusable parts
-There are three scopes:global, local, block
-Queue is an abstract Data Structure where items are kept in order
-Objects are similar to arrays, except that instead of using indexes to access and modify their data, you access the data in objects through what are called properties.
-There are two ways to access the properties of an object: dot notation (.)-known name of the property and bracket notation ([])-have a spce in property, similar to an array.
-bracket notation is udeful to iterate through objects properties
-The syntax is a ? b : c, where a is the condition, b is the code to run when the condition returns true, and c is the code to run when the condition returns false.
-let(unique varibale, if not error), var (will be overwritten, without an error)
-\w===[A-Za-z0-9_] ; opposites is \W
-\d===[0-9]   ; \D is [^0-9]
-JavaScript recognizes six primitive (immutable) data types: Boolean, Null, Undefined, Number, String, and Symbol (new with ES6) and one type for mutable items: Object. Note that in JavaScript, arrays are technically a type of object.
-splice() is for removing any number of items from anywhere of an array. ex: arr.splice(2,3) means removing 3 items starting from second index. We can add third parameter to splice() for adding an element to the same index
-to copy whole array=> [...arr] => called spread operator 
